
@use '@leadspark/styles/variables' as *;

.container {
  // Use variables with their namespace
  background-color: $white;
  font-family: $white;

  // Use mixins with their namespace
  
}

.knowledgeBaseContainer {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0;
}

.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 60vh;
  gap: $white;
}

.loadingSpinner {
  width: 40px;
  height: 40px;
  border: 3px solid $white;
  border-top: 3px solid $white;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.loadingText {
  color: $white;
  font-size: $white;
  margin: 0;
}

.kbHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  margin-bottom: $white;
  padding-bottom: $white;
  border-bottom: 1px solid $white;
}

.headerContent {
  flex: 1;
}

.pageTitle {
  font-size: $white;
  font-weight: 700;
  color: $white;
  margin: 0 0 $white 0;
}

.kbCount {
  font-size: $white;
  color: $white;
  margin: 0;
}

.headerActions {
  display: flex;
  gap: $white;
}

.uploadButton {
  display: inline-flex;
  align-items: center;
  gap: $white;
  padding: $white $white;
  background: $white;
  color: $white;
  text-decoration: none;
  border-radius: $rounded-md;
  font-weight: 600;
  transition: all 0.3s ease;

  &:hover {
    background: $white;
    transform: translateY(-2px);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px $white;
  }
}

.errorMessage {
  display: flex;
  align-items: center;
  gap: $white;
  padding: $white;
  background: $white;
  border: 1px solid $white;
  border-radius: $rounded-md;
  color: $white;
  margin-bottom: $white;
}

.errorIcon {
  font-size: $white;
}

.filtersSection {
  background: $white;
  border: 1px solid $white;
  border-radius: $rounded-lg;
  padding: $white;
  margin-bottom: $white;
}

.searchContainer {
  margin-bottom: $white;
}

.searchInputWrapper {
  position: relative;
  max-width: 500px;
}

.searchIcon {
  position: absolute;
  left: $white;
  top: 50%;
  transform: translateY(-50%);
  color: $white;
  font-size: $white;
}

.searchInput {
  width: 100%;
  padding: $white $white $white 3rem;
  border: 1px solid $white;
  border-radius: $rounded-md;
  font-size: $white;
  background: $white;
  transition: border-color 0.2s ease;

  &:focus {
    outline: none;
    border-color: $white;
    box-shadow: 0 0 0 2px $white;
  }

  &::placeholder {
    color: $white;
  }
}

.typeFilters {
  display: flex;
  gap: $white;
  flex-wrap: wrap;
}

.filterButton {
  display: flex;
  align-items: center;
  gap: $white;
  padding: $white $white;
  background: $white;
  border: 1px solid $white;
  border-radius: $rounded-md;
  color: $white;
  font-size: $white;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    border-color: $white;
    color: $white;
  }

  &.active {
    background: $white;
    border-color: $white;
    color: $white;
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px $white;
  }
}

.filterCount {
  background: rgba(255, 255, 255, 0.2);
  border-radius: $rounded;
  padding: 2px $white;
  font-size: $white;
  font-weight: 600;
  min-width: 18px;
  text-align: center;

  .filterButton:not(.active) & {
    background: $white;
    color: $white;
  }
}

.emptyState {
  text-align: center;
  padding: $white;
  background: $white;
  border: 2px dashed $white;
  border-radius: $rounded-lg;
}

.emptyIcon {
  font-size: 4rem;
  margin-bottom: $white;
  opacity: 0.6;
}

.emptyTitle {
  font-size: $white;
  font-weight: 600;
  color: $white;
  margin: 0 0 $white 0;
}

.emptyText {
  font-size: $white;
  color: $white;
  margin: 0 0 $white 0;
  max-width: 500px;
  margin-left: auto;
  margin-right: auto;
  line-height: 1.6;
}

.getStartedButton,
.clearFiltersButton {
  display: inline-flex;
  align-items: center;
  padding: $white $white;
  background: $white;
  color: $white;
  text-decoration: none;
  border: none;
  border-radius: $rounded-md;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;

  &:hover {
    background: $white;
    transform: translateY(-2px);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px $white;
  }
}

.entriesGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: $white;
}

.entryCard {
  background: $white;
  border: 1px solid $white;
  border-radius: $rounded-lg;
  padding: $white;
  transition: all 0.3s ease;

  &:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
    border-color: $white;
  }
}

.entryHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: $white;
}

.entryType {
  display: flex;
  align-items: center;
  gap: $white;
  padding: $white $white;
  background: $white;
  border-radius: $rounded;
}

.typeIcon {
  font-size: $white;
}

.typeName {
  font-size: $white;
  font-weight: 600;
  color: $white;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.entryActions {
  display: flex;
  gap: $white;
}

.deleteButton {
  background: none;
  border: none;
  color: $white;
  cursor: pointer;
  padding: $white;
  border-radius: $rounded;
  transition: all 0.2s ease;

  &:hover:not(:disabled) {
    color: $white;
    background: $white;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }
}

.entryContent {
  margin-bottom: $white;
}

.entryTitle {
  font-size: $white;
  font-weight: 600;
  color: $white;
  margin: 0 0 $white 0;
  line-height: 1.3;
}

.entryUrl {
  display: block;
  color: $white;
  text-decoration: none;
  font-size: $white;
  margin-bottom: $white;
  word-break: break-all;

  &:hover {
    text-decoration: underline;
  }
}

.entryDescription {
  font-size: $white;
  color: $white;
  line-height: 1.5;
  margin: 0 0 $white 0;
}

.entryTags {
  display: flex;
  gap: $white;
  flex-wrap: wrap;
  margin-bottom: $white;
}

.tag {
  padding: $white $white;
  background: $white;
  border: 1px solid $white;
  border-radius: $rounded;
  font-size: $white;
  color: $white;
}

.tagMore {
  padding: $white $white;
  background: $white;
  border-radius: $rounded;
  font-size: $white;
  color: $white;
  font-weight: 600;
}

.entryFooter {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: $white;
  border-top: 1px solid $white;
}

.entryDate {
  font-size: $white;
  color: $white;
}

.entryStats {
  display: flex;
  gap: $white;
}

.contentLength {
  font-size: $white;
  color: $white;
  padding: $white $white;
  background: $white;
  border-radius: $rounded;
}

// Responsive Design
@media (max-width: $white) {
  .kbHeader {
    flex-direction: column;
    align-items: stretch;
    gap: $white;
  }

  .headerActions {
    align-self: flex-end;
  }

  .filtersSection {
    padding: $white;
  }

  .searchInputWrapper {
    max-width: none;
  }

  .typeFilters {
    justify-content: center;
  }

  .entriesGrid {
    grid-template-columns: 1fr;
  }
}

@media (max-width: $white) {
  .pageTitle {
    font-size: $white;
  }

  .emptyState {
    padding: $white;
  }

  .emptyIcon {
    font-size: 3rem;
  }

  .entryCard {
    padding: $white;
  }

  .entryHeader {
    flex-direction: column;
    align-items: stretch;
    gap: $white;
  }

  .entryActions {
    align-self: flex-end;
  }

  .entryFooter {
    flex-direction: column;
    align-items: stretch;
    gap: $white;
  }

  .entryStats {
    justify-content: flex-start;
  }
}
